{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { AppAuthContext } from '../../../core/contexts/AppAuthProvider';\nconst useChat = friend => {\n  _s();\n  const [messages, setmessages] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const [error, seterror] = useState();\n  const [msgLoading, setmsgLoading] = useState(false);\n  const [msgError, setmsgError] = useState();\n  const [msg, setMsg] = useState();\n  const {\n    authenticatedUser: user\n  } = useContext(AppAuthContext);\n  const getMessages = async () => {\n    try {\n      setisLoading(true);\n      seterror();\n      const result = await axios.get('http://localhost:5001/message', {\n        params: {\n          user,\n          friend\n        }\n      });\n      if (result && result.length != 0) {\n        setmessages(result.data.data);\n      }\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.statusCode) == 7004) {\n        setmessages([]);\n      } else seterror('An error has occured');\n    } finally {\n      setisLoading(false);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      setmsgLoading(true);\n      setmsgError();\n      const result = await axios.post('http://localhost:5001/message', {\n        sender: user,\n        receiver: friend,\n        content: msg,\n        date: dayjs()\n      });\n      if (result && result.length != 0) {\n        console.log(result.data.data);\n        setMsg();\n        setmessages(previous => [result.data.data, ...previous]);\n      }\n    } catch (error) {\n      console.log(error);\n      setmsgError(\"An error has occured\");\n    } finally {\n      setmsgLoading(false);\n    }\n  };\n  const handleSend = e => {\n    e.preventDefault();\n    msg && sendMessage();\n  };\n  useEffect(() => {\n    getMessages();\n  }, [friend]);\n  return {\n    messages,\n    isLoading,\n    error,\n    handleSend,\n    setMsg,\n    msgLoading,\n    msgError\n  };\n};\n_s(useChat, \"C60mxTG4f676lZw2tsJZCD5cIaI=\");\nexport default useChat;","map":{"version":3,"names":["axios","useContext","useEffect","useState","dayjs","AppAuthContext","useChat","friend","_s","messages","setmessages","isLoading","setisLoading","error","seterror","msgLoading","setmsgLoading","msgError","setmsgError","msg","setMsg","authenticatedUser","user","getMessages","result","get","params","length","data","_error$response","response","statusCode","sendMessage","post","sender","receiver","content","date","console","log","previous","handleSend","e","preventDefault"],"sources":["/home/saafi/Desktop/Personal/websock/front/src/pages/chat/logic/useChat.js"],"sourcesContent":["import axios from 'axios'\nimport { useContext, useEffect, useState } from 'react'\n\nimport dayjs from 'dayjs'\nimport { AppAuthContext } from '../../../core/contexts/AppAuthProvider'\n\nconst useChat = (friend) => {\n\n    const [messages, setmessages] = useState([])\n    const [isLoading, setisLoading] = useState(true)\n    const [error, seterror] = useState()\n    const [msgLoading, setmsgLoading] = useState(false)\n    const [msgError, setmsgError] = useState()\n    const [msg, setMsg] = useState();\n\n\n\n    const {   authenticatedUser : user } = useContext(AppAuthContext)\n\n\n    const getMessages = async () => {\n        try {\n            setisLoading(true)\n            seterror()\n\n            const result = await axios.get('http://localhost:5001/message', { params: { user, friend } });\n            if (result && result.length != 0) {\n                setmessages(result.data.data)\n            }\n        } catch (error) {\n            if (error.response?.data.statusCode == 7004) {\n                setmessages([])\n            } else seterror('An error has occured')\n        } finally {\n            setisLoading(false)\n        }\n    };\n\n    const sendMessage = async () => {\n        try {\n            setmsgLoading(true)\n            setmsgError()\n\n            const result = await axios.post('http://localhost:5001/message', { sender: user, receiver: friend, content: msg, date: dayjs() });\n            if (result && result.length != 0) {\n                console.log(result.data.data)\n                setMsg()\n                setmessages(previous => [result.data.data, ...previous ])\n            }\n        } catch (error) {\n            console.log(error);\n            setmsgError(\"An error has occured\")\n        } finally {\n            setmsgLoading(false)\n        }\n    }\n\n    const handleSend = (e) => {\n        e.preventDefault();\n        msg && sendMessage();\n        \n    }\n    useEffect(() => {\n        getMessages()\n    }, [friend])\n\n    return {\n        messages,\n        isLoading,\n        error,\n        handleSend,\n        setMsg,\n        msgLoading,\n        msgError\n\n    }\n}\n\nexport default useChat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}