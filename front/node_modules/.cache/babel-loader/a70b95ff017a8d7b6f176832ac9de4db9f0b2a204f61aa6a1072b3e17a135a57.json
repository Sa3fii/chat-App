{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { socket } from '../../../socket';\nimport dayjs from 'dayjs';\nimport { AppAuthContext } from '../../../core/contexts/AppAuthProvider';\nconst useChat = (friend, user) => {\n  _s();\n  const [messages, setmessages] = useState([]);\n  const [isLoading, setisLoading] = useState(true);\n  const [error, seterror] = useState();\n  const [msgLoading, setmsgLoading] = useState(false);\n  const [msgError, setmsgError] = useState();\n  const [msg, setMsg] = useState('');\n  useEffect(() => {\n    function onMessageRec(value) {}\n    socket.on('receive_message', onMessageRec);\n    return () => {\n      socket.off('receive_message', onMessageRec);\n    };\n  }, []);\n  const getMessages = async () => {\n    try {\n      setisLoading(true);\n      seterror();\n      const result = await axios.get('http://localhost:5001/message', {\n        params: {\n          user: user.id,\n          friend\n        }\n      });\n      if (result && result.length != 0) {\n        setmessages(result.data.data);\n      }\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.statusCode) == 7004) {\n        setmessages([]);\n      } else seterror('An error has occured');\n    } finally {\n      setisLoading(false);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      setmsgLoading(true);\n      setmsgError();\n      const result = await axios.post('http://localhost:5001/message', {\n        sender: user.id,\n        receiver: friend,\n        content: msg,\n        date: dayjs()\n      });\n      if (result && result.length != 0) {\n        socket.emit('send_message', {\n          dest: friend,\n          msg: result.data.data\n        });\n        setmessages(previous => [result.data.data, ...previous]);\n      }\n    } catch (error) {\n      console.log(error);\n      setmsgError(\"An error has occured\");\n    } finally {\n      setmsgLoading(false);\n    }\n  };\n  const handleSend = e => {\n    e.preventDefault();\n    msg && sendMessage();\n    setMsg('');\n  };\n  useEffect(() => {\n    getMessages();\n  }, [friend]);\n  return {\n    messages,\n    isLoading,\n    error,\n    handleSend,\n    setMsg,\n    msgLoading,\n    msgError,\n    user\n  };\n};\n_s(useChat, \"bSG/oGTIcFV0jOAyPAmKB0U1lKM=\");\nexport default useChat;","map":{"version":3,"names":["axios","useContext","useEffect","useState","socket","dayjs","AppAuthContext","useChat","friend","user","_s","messages","setmessages","isLoading","setisLoading","error","seterror","msgLoading","setmsgLoading","msgError","setmsgError","msg","setMsg","onMessageRec","value","on","off","getMessages","result","get","params","id","length","data","_error$response","response","statusCode","sendMessage","post","sender","receiver","content","date","emit","dest","previous","console","log","handleSend","e","preventDefault"],"sources":["/home/saafi/Desktop/Personal/websock/front/src/pages/chat/logic/useChat.js"],"sourcesContent":["import axios from 'axios'\nimport { useContext, useEffect, useState } from 'react'\nimport { socket } from '../../../socket'\nimport dayjs from 'dayjs'\nimport { AppAuthContext } from '../../../core/contexts/AppAuthProvider'\n\nconst useChat = (friend,user) => {\n\n    const [messages, setmessages] = useState([])\n    const [isLoading, setisLoading] = useState(true)\n    const [error, seterror] = useState()\n    const [msgLoading, setmsgLoading] = useState(false)\n    const [msgError, setmsgError] = useState()\n    const [msg, setMsg] = useState('');\n\n    useEffect(() => {\n\n        function onMessageRec(value) {\n            \n        }\n\n        socket.on('receive_message', onMessageRec);\n\n        return () => {\n            socket.off('receive_message', onMessageRec);\n        }\n    }, [])\n    \n    const getMessages = async () => {\n        try {\n            setisLoading(true)\n            seterror()\n\n            const result = await axios.get('http://localhost:5001/message', { params: { user : user.id , friend } });\n            if (result && result.length != 0) {\n                setmessages(result.data.data)\n            }\n        } catch (error) {\n            if (error.response?.data.statusCode == 7004) {\n                setmessages([])\n            } else seterror('An error has occured')\n        } finally {\n            setisLoading(false)\n        }\n    };\n\n    const sendMessage = async () => {\n        try {\n            setmsgLoading(true)\n            setmsgError()\n\n            const result = await axios.post('http://localhost:5001/message', { sender: user.id, receiver: friend, content: msg, date: dayjs() });\n            if (result && result.length != 0) {\n                socket.emit('send_message',{dest : friend, msg : result.data.data});\n                setmessages(previous => [result.data.data, ...previous ]);\n            }\n        } catch (error) {\n            console.log(error);\n            setmsgError(\"An error has occured\")\n        } finally {\n            setmsgLoading(false)\n        }\n    }\n\n    const handleSend = (e) => {\n        e.preventDefault();\n        msg && sendMessage();\n        setMsg('')\n        \n    }\n    useEffect(() => {\n        getMessages()\n    }, [friend])\n\n    return {\n        messages,\n        isLoading,\n        error,\n        handleSend,\n        setMsg,\n        msgLoading,\n        msgError,\n        user\n\n    }\n}\n\nexport default useChat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}