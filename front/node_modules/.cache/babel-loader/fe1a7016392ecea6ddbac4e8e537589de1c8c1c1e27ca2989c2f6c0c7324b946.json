{"ast":null,"code":"var _jsxFileName = \"/home/saafi/Desktop/Personal/websock/front/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\n// import { ConnectionManager } from './components/ConnectionManager';\n// import { ConnectionState } from './components/ConnectionState';\nimport { socket } from './socket';\n// import { Messages } from './components/Messages';\nimport messageList from './messages.json';\n// import { SendMessage } from './components/SendMessage';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Login from './pages/login/Login';\nimport Home from './pages/home/Home';\nimport Chat from './pages/chat/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [messages, setMessages] = useState(messageList);\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n    function onMessageRec(value) {\n      console.log(value);\n      setMessages(previous => [...previous, value]);\n    }\n    socket.on('connect', onConnect);\n    socket.on('disconnect', onDisconnect);\n    socket.on('receive_message', onMessageRec);\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('disconnect', onDisconnect);\n      socket.off('receive_message', onMessageRec);\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <ConnectionState isConnected={isConnected} />\n    //   <ConnectionManager />\n    //   <SendMessage />\n    //   <Messages messages={messages} />\n    // </div>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 38\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chat\",\n            element: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"x35ahZgFRkrJ4g2X6K9tk/acCaY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","socket","messageList","BrowserRouter","Router","Routes","Route","Login","Home","Chat","jsxDEV","_jsxDEV","App","_s","isConnected","setIsConnected","connected","messages","setMessages","onConnect","onDisconnect","onMessageRec","value","console","log","previous","on","off","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/saafi/Desktop/Personal/websock/front/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n// import { ConnectionManager } from './components/ConnectionManager';\n// import { ConnectionState } from './components/ConnectionState';\nimport { socket } from './socket';\n// import { Messages } from './components/Messages';\nimport messageList from './messages.json'\n// import { SendMessage } from './components/SendMessage';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Login from './pages/login/Login';\nimport Home from './pages/home/Home';\nimport Chat from './pages/chat/Chat';\nfunction App() {\n\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [messages, setMessages] = useState(messageList);\n\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n\n    function onMessageRec(value) {\n      console.log(value)\n      setMessages(previous => [...previous, value]);\n    }\n\n    socket.on('connect', onConnect);\n    socket.on('disconnect', onDisconnect);\n    socket.on('receive_message', onMessageRec);\n\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('disconnect', onDisconnect);\n      socket.off('receive_message', onMessageRec);\n    };\n  }, []);\n\n\n  return (\n    // <div>\n    //   <ConnectionState isConnected={isConnected} />\n    //   <ConnectionManager />\n    //   <SendMessage />\n    //   <Messages messages={messages} />\n    // </div>\n    <Router>\n      <Routes>\n        <Route path='/' element={<Login/>}/>\n        <Route path='/home' element={<Home/>}>\n          <Route path='/chat' element={<Chat/>}/>\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}