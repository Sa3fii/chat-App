{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useNotification = (key, defaultValue = null) => {\n  _s();\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const value = window.localStorage.getItem(key);\n      if (value) return JSON.parse(value);else {\n        ////window.localStorage.setItem(key, JSON.stringify(defaultValue));\n        return defaultValue;\n      }\n    } catch (err) {\n      return defaultValue;\n    }\n  });\n  const setValue = newValue => {\n    let notifList = [];\n    try {\n      if (storedValue && storedValue.length !== 0) {\n        console.log('afsf');\n        const idx = storedValue.findIndex(elmnt => elmnt.id == newValue);\n        console.log('idx', idx);\n        if (idx != null) {\n          console.log('id exist');\n          const newNotif = {\n            id: newValue,\n            count: storedValue[idx].count\n          };\n          notifList = storedValue;\n          notifList.splice(idx, 1);\n          notifList.push(newNotif);\n        } else if (!idx) {\n          console.log('new notif id');\n          notifList.push({\n            id: newValue,\n            count: 1\n          });\n        }\n        window.localStorage.setItem(key, JSON.stringify(notifList));\n      } else if (!storedValue) {\n        notifList.push({\n          id: newValue,\n          count: 1\n        });\n        window.localStorage.setItem(key, JSON.stringify(notifList));\n      } else window.localStorage.removeItem(key);\n    } catch (err) {}\n    setStoredValue(notifList);\n  };\n  return [storedValue, setValue];\n};\n_s(useNotification, \"j0VUgzh1vBE7nDoYzFQ0PJBq6Bc=\");\nexport default useNotification;","map":{"version":3,"names":["useState","useNotification","key","defaultValue","_s","storedValue","setStoredValue","value","window","localStorage","getItem","JSON","parse","err","setValue","newValue","notifList","length","console","log","idx","findIndex","elmnt","id","newNotif","count","splice","push","setItem","stringify","removeItem"],"sources":["/home/saafi/Desktop/Personal/websock/front/src/core/hooks/useNotification.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst useNotification = (key, defaultValue = null) => {\n\n    const [storedValue, setStoredValue] = useState(\n        () => {\n            try {\n                const value = window.localStorage.getItem(key);\n                if (value) return JSON.parse(value);\n                else {\n                    ////window.localStorage.setItem(key, JSON.stringify(defaultValue));\n                    return defaultValue;\n                }\n            } catch (err) {\n                return defaultValue;\n            }\n        }\n    );\n\n    const setValue = (newValue) => {\n        let notifList = []\n        try {\n\n            if (storedValue && storedValue.length !== 0) {\n                console.log('afsf')\n                const idx = storedValue.findIndex((elmnt) => elmnt.id == newValue);\n\n                console.log('idx', idx)\n\n                if (idx != null) {\n                    console.log('id exist')\n                    const newNotif = { id: newValue, count: storedValue[idx].count }\n                    notifList = storedValue\n                    notifList.splice(idx, 1)\n                    notifList.push(newNotif)\n\n                } else if (!idx) {\n                    console.log('new notif id')\n                    notifList.push({ id: newValue, count: 1 })\n                }\n\n                window.localStorage.setItem(key, JSON.stringify(notifList));\n            } else if (!storedValue) {  \n\n                notifList.push({ id: newValue, count: 1 })\n                window.localStorage.setItem(key, JSON.stringify(notifList));\n\n            } else window.localStorage.removeItem(key);\n        } catch (err) { }\n        setStoredValue(notifList);\n    };\n\n    return [storedValue, setValue];\n};\n\nexport default useNotification;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,YAAY,GAAG,IAAI,KAAK;EAAAC,EAAA;EAElD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAC1C,MAAM;IACF,IAAI;MACA,MAAMO,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC;MAC9C,IAAIK,KAAK,EAAE,OAAOI,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC,CAAC,KAC/B;QACD;QACA,OAAOJ,YAAY;MACvB;IACJ,CAAC,CAAC,OAAOU,GAAG,EAAE;MACV,OAAOV,YAAY;IACvB;EACJ,CACJ,CAAC;EAED,MAAMW,QAAQ,GAAIC,QAAQ,IAAK;IAC3B,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAI;MAEA,IAAIX,WAAW,IAAIA,WAAW,CAACY,MAAM,KAAK,CAAC,EAAE;QACzCC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnB,MAAMC,GAAG,GAAGf,WAAW,CAACgB,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,IAAIR,QAAQ,CAAC;QAElEG,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,GAAG,CAAC;QAEvB,IAAIA,GAAG,IAAI,IAAI,EAAE;UACbF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;UACvB,MAAMK,QAAQ,GAAG;YAAED,EAAE,EAAER,QAAQ;YAAEU,KAAK,EAAEpB,WAAW,CAACe,GAAG,CAAC,CAACK;UAAM,CAAC;UAChET,SAAS,GAAGX,WAAW;UACvBW,SAAS,CAACU,MAAM,CAACN,GAAG,EAAE,CAAC,CAAC;UACxBJ,SAAS,CAACW,IAAI,CAACH,QAAQ,CAAC;QAE5B,CAAC,MAAM,IAAI,CAACJ,GAAG,EAAE;UACbF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3BH,SAAS,CAACW,IAAI,CAAC;YAAEJ,EAAE,EAAER,QAAQ;YAAEU,KAAK,EAAE;UAAE,CAAC,CAAC;QAC9C;QAEAjB,MAAM,CAACC,YAAY,CAACmB,OAAO,CAAC1B,GAAG,EAAES,IAAI,CAACkB,SAAS,CAACb,SAAS,CAAC,CAAC;MAC/D,CAAC,MAAM,IAAI,CAACX,WAAW,EAAE;QAErBW,SAAS,CAACW,IAAI,CAAC;UAAEJ,EAAE,EAAER,QAAQ;UAAEU,KAAK,EAAE;QAAE,CAAC,CAAC;QAC1CjB,MAAM,CAACC,YAAY,CAACmB,OAAO,CAAC1B,GAAG,EAAES,IAAI,CAACkB,SAAS,CAACb,SAAS,CAAC,CAAC;MAE/D,CAAC,MAAMR,MAAM,CAACC,YAAY,CAACqB,UAAU,CAAC5B,GAAG,CAAC;IAC9C,CAAC,CAAC,OAAOW,GAAG,EAAE,CAAE;IAChBP,cAAc,CAACU,SAAS,CAAC;EAC7B,CAAC;EAED,OAAO,CAACX,WAAW,EAAES,QAAQ,CAAC;AAClC,CAAC;AAACV,EAAA,CAnDIH,eAAe;AAqDrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}